name: Test cache

on:
  pull_request:

defaults:
  run:
    shell: bash

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      ver: ${{ steps.set_version.outputs.ver }}
    steps:
      - name: Set ver
        id: set_version
        run: |
          echo ::set-output name=ver::"v1.8.0"
  init:
    runs-on: ubuntu-latest
    needs: [ config ]
    steps:
      - name: Initialize
        run: |
          pip install --upgrade pip
          pip3 install west
          echo ${{needs.config.outputs.ver}}
          mkdir app && cd app
          west init -m https://github.com/nrfconnect/sdk-nrf --mr ${{needs.config.outputs.ver}}
          west update
      - name: Cache
        uses: actions/cache@v3
        id: cache-firmware
        with:
          path: app
          key: build-${{ github.sha }}-${{needs.config.outputs.ver}}
          restore-keys: |
            build-${{ github.sha }}-${{needs.config.outputs.ver}}
            
  build:
    runs-on: ubuntu-latest
    container: zephyrprojectrtos/ci:v0.23.4
    needs: [ config, init ]
    strategy:
        matrix:
          board-name: [nrf52840dk_nrf52840, nrf52dk_nrf52832]
    steps:
      - name: Boot up
        uses: actions/cache@v3
        id: cache-firmware
        with:
          path: app
          key: build-${{ github.sha }}-${{needs.config.outputs.ver}}
      - name: Config
        working-directory: app
        run: |  
          ls
          pip install --upgrade pip
          pip install -U west
          pip install -U -r zephyr/scripts/requirements-base.txt
          pip install -U ecdsa
      - name: Build sample
        working-directory: app
        run: |
            export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
            ls
            cd nrf/samples/bluetooth/mesh/chat
            west build -b ${{ matrix.board-name }}
      - name: Cache build
        uses: actions/cache@v2
        id: cache-build
        with:
          path: nrf/samples/bluetooth/mesh/chat/build
          key: buildfw-${{ github.sha }}-${{ matrix.board-name }}
          restore-keys: |
            buildfw-${{ github.sha }}
      - name: Status 
        run: |
          FILESIZE=$(wc -c < nrf/samples/bluetooth/mesh/chat/build/zephyr/zephyr.bin)
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \ 
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          -d '{"state":"success","target_url":"https://example.com/build/status","description":"Firmware >> $FILESIZE","context":"robot/${{ matrix.board-name }}"}'
          
        
  store:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Restore build
        uses: actions/cache@v2
        id: cache-build
        with:
          path: builds
          key: buildfw-${{ github.sha }}
          
